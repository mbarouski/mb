data:text/html;base64,PGh0bWw+DQogICAgPGhlYWQ+DQogICAgICAgIDx0aXRsZT5MZWJlZGV2YSBBbmFzdGFzaXlhPC90aXRsZT4NCiAgICAgICAgPHN0eWxlPg0KICAgICAgICAgICAgYm9keSB7DQogICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDsNCiAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICAuY29sbGFnZSB7DQogICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWdyaWQ7DQogICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMnJlbTsNCiAgICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjsNCiAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2xsYWdlX19pdGVtIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMjByZW07DQogICAgICAgICAgICAgICAgaGVpZ2h0OiAyMGVtOw0KICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbGxhZ2VfX2l0ZW0gaW1nIHsNCiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTsNCiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7DQogICAgICAgICAgICAgICAgb2JqZWN0LWZpdDogY292ZXI7DQogICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogMC4ycyB0cmFuc2Zvcm0gZWFzZS1pbi1vdXQ7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2xsYWdlX19pdGVtIGgxIHsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICAgICAgICAgICAgYm90dG9tOiAxcmVtOw0KICAgICAgICAgICAgICAgIGxlZnQ6IDA7DQogICAgICAgICAgICAgICAgcmlnaHQ6IDA7DQogICAgICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87DQogICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlOw0KICAgICAgICAgICAgICAgIHRleHQtc2hhZG93OiAtMXB4IC0xcHggMCAjMDAwLCAxcHggLTFweCAwICMwMDAsIC0xcHggMXB4IDAgIzAwMCwgMXB4IDFweCAwICMwMDA7DQogICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgICAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnTG9uZHJpbmEgT3V0bGluZScsIGN1cnNpdmU7DQogICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogMC4ycyBjb2xvciBlYXNlLWluLW91dDsNCiAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgLmNvbGxhZ2VfX2l0ZW06aG92ZXIgaDEgew0KICAgICAgICAgICAgICAgIGNvbG9yOiBvcmFuZ2U7DQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIC5jb2xsYWdlX19pdGVtOmhvdmVyIGltZyB7DQogICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAzMTI1KTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgPC9zdHlsZT4NCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxvbmRyaW5hK091dGxpbmUmZGlzcGxheT1zd2FwIiByZWw9InN0eWxlc2hlZXQiPg0KICAgIDwvaGVhZD4NCiAgICA8Ym9keT4NCiAgICAgICAgPGRpdiBjbGFzcz0iY29sbGFnZSI+DQogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vaW4vYW5hc3Rhc2l5YS1sZWJlZGV2YS05YjM3OWExNjEvIiBjbGFzcz0iY29sbGFnZV9faXRlbSI+DQogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vc3VuOS0zMi51c2VyYXBpLmNvbS9pbXBmL05UbmxWRlJEZ1ltNFZuUEJyY1pOS1l0dENranJMOXl0dXF3V2RBL3hFTzRzMzQwN3pzLmpwZz9zaXplPTY4MHgxMDI0JnF1YWxpdHk9OTYmc2lnbj1kZDZjMGU3NTA5Zjg0OTgxODc5NmNjNzcxNGYyZDcyMCZ0eXBlPWFsYnVtIj4NCiAgICAgICAgICAgICAgICA8aDE+TGlua2VkSW48L2gxPg0KICAgICAgICAgICAgPC9hPg0KICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly90Lm1lL2xlYjNkZXZhX2FuYXN0YXNpYSIgY2xhc3M9ImNvbGxhZ2VfX2l0ZW0iPg0KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL3Bicy50d2ltZy5jb20vcHJvZmlsZV9pbWFnZXMvMTA2NjM5MDA4NzYzMjY1MDI0MC9lNVVUeVBzel80MDB4NDAwLmpwZyI+DQogICAgICAgICAgICAgICAgPGgxPlRlbGVncmFtPC9oMT4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vYW5hc3Rhc2lhLmxlYjNkZXZhLyIgY2xhc3M9ImNvbGxhZ2VfX2l0ZW0iPg0KICAgICAgICAgICAgICAgIDxpbWcgc3JjPSJodHRwczovL3N1bjktMTYudXNlcmFwaS5jb20vYzg0MDUyOS92ODQwNTI5NjIyLzI1MzUwL21fa3VZSVZUYzBZLmpwZyI+DQogICAgICAgICAgICAgICAgPGgxPkluc3RhZ3JhbTwvaDE+DQogICAgICAgICAgICA8L2E+DQogICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5mYWNlYm9vay5jb20vYW5hc3Rhc2l5YS5sZWJlZGV2YS45NDAiIGNsYXNzPSJjb2xsYWdlX19pdGVtIj4NCiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9zdW45LTM1LnVzZXJhcGkuY29tL21JaFo0anlCclJVWGRxaGN4M19zQmw2aFRfNy1wWGt0YUpkS1hBL3FxS1oxUkdtZkljLmpwZyI+DQogICAgICAgICAgICAgICAgPGgxPkZhY2Vib29rPC9oMT4NCiAgICAgICAgICAgIDwvYT4NCiAgICAgICAgPC9kaXY+DQogICAgPC9ib2R5Pg0KPC9odG1sPg==